#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Jul 20, 2021 08:53:38 PM +07  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import DigitalClock_GUI_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    DigitalClock_GUI_support.set_Tk_var()
    top = window (root)
    DigitalClock_GUI_support.init(root, top)
    root.mainloop()

w = None
def create_window(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_window(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    DigitalClock_GUI_support.set_Tk_var()
    top = window (w)
    DigitalClock_GUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_window():
    global w
    w.destroy()
    w = None

class window:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("465x103+1054+674")
        top.minsize(120, 1)
        top.maxsize(1540, 825)
        top.resizable(1,  1)
        top.title("Digital Clock")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(top,
                activebackground="#ececec",
                activeborderwidth=1,
                activeforeground="#000000",
                background="#d9d9d9",
                borderwidth=1,
                disabledforeground="#a3a3a3",
                foreground="#000000",
                tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu,
                label="Hiển thị")
        self.sub_menu.add_command(
                label="Màu số...")
        self.sub_menu.add_command(
                label="Màu nền...")
        self.sub_menu.add_separator(
)
        self.sub_menu.add_radiobutton(
                value='12h',
                variable=DigitalClock_GUI_support.rbtnFormat,
                label="Định dạng 12h")
        self.sub_menu.add_radiobutton(
                value='24h',
                variable=DigitalClock_GUI_support.rbtnFormat,
                label="Định dạng 24h")
        self.sub_menu1 = tk.Menu(top,
                activebackground="#ececec",
                activeborderwidth=1,
                activeforeground="#000000",
                background="#d9d9d9",
                borderwidth=1,
                disabledforeground="#a3a3a3",
                foreground="#000000",
                tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu1,
                label="Thiết lập")
        self.sub_menu1.add_checkbutton(
                variable=DigitalClock_GUI_support.ckb_PlaySoundRightTime,
                label="Phát âm thanh khi giờ đúng")
        self.sub_menu1.add_separator(
)
        self.sub_menu1.add_command(
                label="Báo thức...")

        self.lbClock = tk.Label(top)
        self.lbClock.place(relx=0.0, rely=0.0, height=103, width=464)
        self.lbClock.configure(activebackground="#f9f9f9")
        self.lbClock.configure(activeforeground="black")
        self.lbClock.configure(background="#000000")
        self.lbClock.configure(disabledforeground="#a3a3a3")
        self.lbClock.configure(font=('Digital-7', 70))
        self.lbClock.configure(foreground="#ffffff")
        self.lbClock.configure(highlightbackground="#d9d9d9")
        self.lbClock.configure(highlightcolor="black")
        self.lbClock.configure(text='''00:00:00 AM''')

if __name__ == '__main__':
    vp_start_gui()





